// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kafmesh/discovery/v1/topic_definition.proto

package discoveryv1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// TopicType is the type of message stored in a topic.
type TopicType int32

const (
	TopicType_TOPIC_TYPE_INVALID  TopicType = 0
	TopicType_TOPIC_TYPE_PROTOBUF TopicType = 1
	TopicType_TOPIC_TYPE_RAW      TopicType = 2
)

var TopicType_name = map[int32]string{
	0: "TOPIC_TYPE_INVALID",
	1: "TOPIC_TYPE_PROTOBUF",
	2: "TOPIC_TYPE_RAW",
}

var TopicType_value = map[string]int32{
	"TOPIC_TYPE_INVALID":  0,
	"TOPIC_TYPE_PROTOBUF": 1,
	"TOPIC_TYPE_RAW":      2,
}

func (x TopicType) String() string {
	return proto.EnumName(TopicType_name, int32(x))
}

func (TopicType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8bae9ce406235a0f, []int{0}
}

// TopicDefinition is a description of a kafka topic and what is stored in it.
type TopicDefinition struct {
	Topic                string    `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Type                 TopicType `protobuf:"varint,3,opt,name=type,proto3,enum=kafmesh.discovery.v1.TopicType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TopicDefinition) Reset()         { *m = TopicDefinition{} }
func (m *TopicDefinition) String() string { return proto.CompactTextString(m) }
func (*TopicDefinition) ProtoMessage()    {}
func (*TopicDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bae9ce406235a0f, []int{0}
}

func (m *TopicDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicDefinition.Unmarshal(m, b)
}
func (m *TopicDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicDefinition.Marshal(b, m, deterministic)
}
func (m *TopicDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicDefinition.Merge(m, src)
}
func (m *TopicDefinition) XXX_Size() int {
	return xxx_messageInfo_TopicDefinition.Size(m)
}
func (m *TopicDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_TopicDefinition proto.InternalMessageInfo

func (m *TopicDefinition) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *TopicDefinition) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TopicDefinition) GetType() TopicType {
	if m != nil {
		return m.Type
	}
	return TopicType_TOPIC_TYPE_INVALID
}

func init() {
	proto.RegisterEnum("kafmesh.discovery.v1.TopicType", TopicType_name, TopicType_value)
	proto.RegisterType((*TopicDefinition)(nil), "kafmesh.discovery.v1.TopicDefinition")
}

func init() {
	proto.RegisterFile("kafmesh/discovery/v1/topic_definition.proto", fileDescriptor_8bae9ce406235a0f)
}

var fileDescriptor_8bae9ce406235a0f = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0xce, 0x4e, 0x4c, 0xcb,
	0x4d, 0x2d, 0xce, 0xd0, 0x4f, 0xc9, 0x2c, 0x4e, 0xce, 0x2f, 0x4b, 0x2d, 0xaa, 0xd4, 0x2f, 0x33,
	0xd4, 0x2f, 0xc9, 0x2f, 0xc8, 0x4c, 0x8e, 0x4f, 0x49, 0x4d, 0xcb, 0xcc, 0xcb, 0x2c, 0xc9, 0xcc,
	0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x81, 0x2a, 0xd6, 0x83, 0x2b, 0xd6, 0x2b,
	0x33, 0x54, 0x2a, 0xe3, 0xe2, 0x0f, 0x01, 0xa9, 0x77, 0x81, 0x2b, 0x17, 0x12, 0xe1, 0x62, 0x05,
	0x1b, 0x21, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0xe1, 0x08, 0x49, 0x70, 0xb1, 0xe7, 0xa6,
	0x16, 0x17, 0x27, 0xa6, 0xa7, 0x4a, 0x30, 0x81, 0xc5, 0x61, 0x5c, 0x21, 0x63, 0x2e, 0x96, 0x92,
	0xca, 0x82, 0x54, 0x09, 0x66, 0x05, 0x46, 0x0d, 0x3e, 0x23, 0x79, 0x3d, 0x6c, 0xf6, 0xe8, 0x81,
	0x2d, 0x09, 0xa9, 0x2c, 0x48, 0x0d, 0x02, 0x2b, 0xd6, 0x0a, 0xe0, 0xe2, 0x84, 0x0b, 0x09, 0x89,
	0x71, 0x09, 0x85, 0xf8, 0x07, 0x78, 0x3a, 0xc7, 0x87, 0x44, 0x06, 0xb8, 0xc6, 0x7b, 0xfa, 0x85,
	0x39, 0xfa, 0x78, 0xba, 0x08, 0x30, 0x08, 0x89, 0x73, 0x09, 0x23, 0x89, 0x07, 0x04, 0xf9, 0x87,
	0xf8, 0x3b, 0x85, 0xba, 0x09, 0x30, 0x0a, 0x09, 0x71, 0xf1, 0x21, 0x49, 0x04, 0x39, 0x86, 0x0b,
	0x30, 0x39, 0xc5, 0x70, 0x49, 0x24, 0xe7, 0xe7, 0x62, 0xb5, 0xdd, 0x49, 0x04, 0xcd, 0x8f, 0x01,
	0xa0, 0x10, 0x09, 0x60, 0x8c, 0xe2, 0x86, 0xab, 0x2a, 0x33, 0x5c, 0xc4, 0xc4, 0xec, 0xed, 0x12,
	0xb1, 0x8a, 0x49, 0xc4, 0x1b, 0x6a, 0x82, 0x0b, 0xdc, 0x84, 0x30, 0xc3, 0x24, 0x36, 0x70, 0x20,
	0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x71, 0x48, 0x7f, 0x73, 0x01, 0x00, 0x00,
}
