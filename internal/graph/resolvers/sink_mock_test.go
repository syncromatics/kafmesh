// Code generated by MockGen. DO NOT EDIT.
// Source: ./sink.go

// Package resolvers_test is a generated GoMock package.
package resolvers_test

import (
	gomock "github.com/golang/mock/gomock"
	model "github.com/syncromatics/kafmesh/internal/graph/model"
	reflect "reflect"
)

// MockSinkLoader is a mock of SinkLoader interface
type MockSinkLoader struct {
	ctrl     *gomock.Controller
	recorder *MockSinkLoaderMockRecorder
}

// MockSinkLoaderMockRecorder is the mock recorder for MockSinkLoader
type MockSinkLoaderMockRecorder struct {
	mock *MockSinkLoader
}

// NewMockSinkLoader creates a new mock instance
func NewMockSinkLoader(ctrl *gomock.Controller) *MockSinkLoader {
	mock := &MockSinkLoader{ctrl: ctrl}
	mock.recorder = &MockSinkLoaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSinkLoader) EXPECT() *MockSinkLoaderMockRecorder {
	return m.recorder
}

// ComponentBySink mocks base method
func (m *MockSinkLoader) ComponentBySink(arg0 int) (*model.Component, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ComponentBySink", arg0)
	ret0, _ := ret[0].(*model.Component)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ComponentBySink indicates an expected call of ComponentBySink
func (mr *MockSinkLoaderMockRecorder) ComponentBySink(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ComponentBySink", reflect.TypeOf((*MockSinkLoader)(nil).ComponentBySink), arg0)
}

// PodsBySink mocks base method
func (m *MockSinkLoader) PodsBySink(arg0 int) ([]*model.Pod, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PodsBySink", arg0)
	ret0, _ := ret[0].([]*model.Pod)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PodsBySink indicates an expected call of PodsBySink
func (mr *MockSinkLoaderMockRecorder) PodsBySink(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PodsBySink", reflect.TypeOf((*MockSinkLoader)(nil).PodsBySink), arg0)
}

// TopicBySink mocks base method
func (m *MockSinkLoader) TopicBySink(arg0 int) (*model.Topic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TopicBySink", arg0)
	ret0, _ := ret[0].(*model.Topic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TopicBySink indicates an expected call of TopicBySink
func (mr *MockSinkLoaderMockRecorder) TopicBySink(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TopicBySink", reflect.TypeOf((*MockSinkLoader)(nil).TopicBySink), arg0)
}
