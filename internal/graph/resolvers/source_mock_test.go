// Code generated by MockGen. DO NOT EDIT.
// Source: ./source.go

// Package resolvers_test is a generated GoMock package.
package resolvers_test

import (
	gomock "github.com/golang/mock/gomock"
	model "github.com/syncromatics/kafmesh/internal/graph/model"
	reflect "reflect"
)

// MockSourceLoader is a mock of SourceLoader interface
type MockSourceLoader struct {
	ctrl     *gomock.Controller
	recorder *MockSourceLoaderMockRecorder
}

// MockSourceLoaderMockRecorder is the mock recorder for MockSourceLoader
type MockSourceLoaderMockRecorder struct {
	mock *MockSourceLoader
}

// NewMockSourceLoader creates a new mock instance
func NewMockSourceLoader(ctrl *gomock.Controller) *MockSourceLoader {
	mock := &MockSourceLoader{ctrl: ctrl}
	mock.recorder = &MockSourceLoaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSourceLoader) EXPECT() *MockSourceLoaderMockRecorder {
	return m.recorder
}

// ComponentBySource mocks base method
func (m *MockSourceLoader) ComponentBySource(arg0 int) (*model.Component, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ComponentBySource", arg0)
	ret0, _ := ret[0].(*model.Component)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ComponentBySource indicates an expected call of ComponentBySource
func (mr *MockSourceLoaderMockRecorder) ComponentBySource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ComponentBySource", reflect.TypeOf((*MockSourceLoader)(nil).ComponentBySource), arg0)
}

// PodsBySource mocks base method
func (m *MockSourceLoader) PodsBySource(arg0 int) ([]*model.Pod, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PodsBySource", arg0)
	ret0, _ := ret[0].([]*model.Pod)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PodsBySource indicates an expected call of PodsBySource
func (mr *MockSourceLoaderMockRecorder) PodsBySource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PodsBySource", reflect.TypeOf((*MockSourceLoader)(nil).PodsBySource), arg0)
}

// TopicBySource mocks base method
func (m *MockSourceLoader) TopicBySource(arg0 int) (*model.Topic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TopicBySource", arg0)
	ret0, _ := ret[0].(*model.Topic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TopicBySource indicates an expected call of TopicBySource
func (mr *MockSourceLoaderMockRecorder) TopicBySource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TopicBySource", reflect.TypeOf((*MockSourceLoader)(nil).TopicBySource), arg0)
}
