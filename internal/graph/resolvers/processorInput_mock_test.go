// Code generated by MockGen. DO NOT EDIT.
// Source: ./processorInput.go

// Package resolvers_test is a generated GoMock package.
package resolvers_test

import (
	gomock "github.com/golang/mock/gomock"
	model "github.com/syncromatics/kafmesh/internal/graph/model"
	reflect "reflect"
)

// MockProcessorInputLoader is a mock of ProcessorInputLoader interface
type MockProcessorInputLoader struct {
	ctrl     *gomock.Controller
	recorder *MockProcessorInputLoaderMockRecorder
}

// MockProcessorInputLoaderMockRecorder is the mock recorder for MockProcessorInputLoader
type MockProcessorInputLoaderMockRecorder struct {
	mock *MockProcessorInputLoader
}

// NewMockProcessorInputLoader creates a new mock instance
func NewMockProcessorInputLoader(ctrl *gomock.Controller) *MockProcessorInputLoader {
	mock := &MockProcessorInputLoader{ctrl: ctrl}
	mock.recorder = &MockProcessorInputLoaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProcessorInputLoader) EXPECT() *MockProcessorInputLoaderMockRecorder {
	return m.recorder
}

// ProcessorByInput mocks base method
func (m *MockProcessorInputLoader) ProcessorByInput(arg0 int) (*model.Processor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessorByInput", arg0)
	ret0, _ := ret[0].(*model.Processor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProcessorByInput indicates an expected call of ProcessorByInput
func (mr *MockProcessorInputLoaderMockRecorder) ProcessorByInput(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessorByInput", reflect.TypeOf((*MockProcessorInputLoader)(nil).ProcessorByInput), arg0)
}

// TopicByInput mocks base method
func (m *MockProcessorInputLoader) TopicByInput(arg0 int) (*model.Topic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TopicByInput", arg0)
	ret0, _ := ret[0].(*model.Topic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TopicByInput indicates an expected call of TopicByInput
func (mr *MockProcessorInputLoaderMockRecorder) TopicByInput(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TopicByInput", reflect.TypeOf((*MockProcessorInputLoader)(nil).TopicByInput), arg0)
}
