// Code generated by MockGen. DO NOT EDIT.
// Source: ./query.go

// Package resolvers_test is a generated GoMock package.
package resolvers_test

import (
	gomock "github.com/golang/mock/gomock"
	model "github.com/syncromatics/kafmesh/internal/graph/model"
	reflect "reflect"
)

// MockQueryLoader is a mock of QueryLoader interface
type MockQueryLoader struct {
	ctrl     *gomock.Controller
	recorder *MockQueryLoaderMockRecorder
}

// MockQueryLoaderMockRecorder is the mock recorder for MockQueryLoader
type MockQueryLoaderMockRecorder struct {
	mock *MockQueryLoader
}

// NewMockQueryLoader creates a new mock instance
func NewMockQueryLoader(ctrl *gomock.Controller) *MockQueryLoader {
	mock := &MockQueryLoader{ctrl: ctrl}
	mock.recorder = &MockQueryLoaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockQueryLoader) EXPECT() *MockQueryLoaderMockRecorder {
	return m.recorder
}

// GetAllServices mocks base method
func (m *MockQueryLoader) GetAllServices() ([]*model.Service, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllServices")
	ret0, _ := ret[0].([]*model.Service)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllServices indicates an expected call of GetAllServices
func (mr *MockQueryLoaderMockRecorder) GetAllServices() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllServices", reflect.TypeOf((*MockQueryLoader)(nil).GetAllServices))
}

// GetAllPods mocks base method
func (m *MockQueryLoader) GetAllPods() ([]*model.Pod, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllPods")
	ret0, _ := ret[0].([]*model.Pod)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllPods indicates an expected call of GetAllPods
func (mr *MockQueryLoaderMockRecorder) GetAllPods() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllPods", reflect.TypeOf((*MockQueryLoader)(nil).GetAllPods))
}

// GetAllTopics mocks base method
func (m *MockQueryLoader) GetAllTopics() ([]*model.Topic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllTopics")
	ret0, _ := ret[0].([]*model.Topic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllTopics indicates an expected call of GetAllTopics
func (mr *MockQueryLoaderMockRecorder) GetAllTopics() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllTopics", reflect.TypeOf((*MockQueryLoader)(nil).GetAllTopics))
}
