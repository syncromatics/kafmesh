// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Component struct {
	ID          int           `json:"id"`
	Service     *Service      `json:"service"`
	Name        string        `json:"name"`
	Description string        `json:"description"`
	Processors  []*Processor  `json:"processors"`
	Sinks       []*Sink       `json:"sinks"`
	Sources     []*Source     `json:"sources"`
	ViewSinks   []*ViewSink   `json:"viewSinks"`
	ViewSources []*ViewSource `json:"viewSources"`
	Views       []*View       `json:"views"`
}

type Pod struct {
	ID          int           `json:"id"`
	Name        string        `json:"name"`
	Processors  []*Processor  `json:"processors"`
	Sinks       []*Sink       `json:"sinks"`
	Sources     []*Source     `json:"sources"`
	ViewSinks   []*ViewSink   `json:"viewSinks"`
	ViewSources []*ViewSource `json:"viewSources"`
	Views       []*View       `json:"views"`
}

type Processor struct {
	ID          int                `json:"id"`
	Component   *Component         `json:"component"`
	Name        string             `json:"name"`
	Description string             `json:"description"`
	GroupName   string             `json:"groupName"`
	Persistence *Topic             `json:"persistence"`
	Pods        []*Pod             `json:"pods"`
	Inputs      []*ProcessorInput  `json:"inputs"`
	Joins       []*ProcessorJoin   `json:"joins"`
	Lookups     []*ProcessorLookup `json:"lookups"`
	Outputs     []*ProcessorOutput `json:"outputs"`
}

type ProcessorInput struct {
	ID        int        `json:"id"`
	Processor *Processor `json:"processor"`
	Topic     *Topic     `json:"topic"`
}

type ProcessorJoin struct {
	ID        int        `json:"id"`
	Processor *Processor `json:"processor"`
	Topic     *Topic     `json:"topic"`
}

type ProcessorLookup struct {
	ID        int        `json:"id"`
	Processor *Processor `json:"processor"`
	Topic     *Topic     `json:"topic"`
}

type ProcessorOutput struct {
	ID        int        `json:"id"`
	Processor *Processor `json:"processor"`
	Topic     *Topic     `json:"topic"`
}

type Service struct {
	ID          int          `json:"id"`
	Name        string       `json:"name"`
	Description string       `json:"description"`
	Components  []*Component `json:"components"`
	DependsOn   []*Service   `json:"dependsOn"`
}

type Sink struct {
	ID          int        `json:"id"`
	Component   *Component `json:"component"`
	Name        string     `json:"name"`
	Description string     `json:"description"`
	Topic       *Topic     `json:"topic"`
	Pods        []*Pod     `json:"pods"`
}

type Source struct {
	ID        int        `json:"id"`
	Component *Component `json:"component"`
	Topic     *Topic     `json:"topic"`
	Pods      []*Pod     `json:"pods"`
}

type Topic struct {
	ID                    int                `json:"id"`
	Name                  string             `json:"name"`
	Message               string             `json:"message"`
	ProcessorInputs       []*ProcessorInput  `json:"processorInputs"`
	ProcessorJoins        []*ProcessorJoin   `json:"processorJoins"`
	ProcessorLookups      []*ProcessorLookup `json:"processorLookups"`
	ProcessorOutputs      []*ProcessorOutput `json:"processorOutputs"`
	ProcessorPersistences []*Processor       `json:"processorPersistences"`
	Sinks                 []*Sink            `json:"sinks"`
	Sources               []*Source          `json:"sources"`
	ViewSinks             []*ViewSink        `json:"viewSinks"`
	ViewSources           []*ViewSource      `json:"viewSources"`
	Views                 []*View            `json:"views"`
}

type View struct {
	ID        int        `json:"id"`
	Component *Component `json:"component"`
	Topic     *Topic     `json:"topic"`
	Pods      []*Pod     `json:"pods"`
}

type ViewSink struct {
	ID          int        `json:"id"`
	Component   *Component `json:"component"`
	Name        string     `json:"name"`
	Description string     `json:"description"`
	Topic       *Topic     `json:"topic"`
	Pods        []*Pod     `json:"pods"`
}

type ViewSource struct {
	ID          int        `json:"id"`
	Component   *Component `json:"component"`
	Description string     `json:"description"`
	Name        string     `json:"name"`
	Topic       *Topic     `json:"topic"`
	Pods        []*Pod     `json:"pods"`
}
