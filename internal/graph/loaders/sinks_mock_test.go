// Code generated by MockGen. DO NOT EDIT.
// Source: ./sinks.go

// Package loaders_test is a generated GoMock package.
package loaders_test

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	model "github.com/syncromatics/kafmesh/internal/graph/model"
	reflect "reflect"
)

// MockSinkRepository is a mock of SinkRepository interface
type MockSinkRepository struct {
	ctrl     *gomock.Controller
	recorder *MockSinkRepositoryMockRecorder
}

// MockSinkRepositoryMockRecorder is the mock recorder for MockSinkRepository
type MockSinkRepositoryMockRecorder struct {
	mock *MockSinkRepository
}

// NewMockSinkRepository creates a new mock instance
func NewMockSinkRepository(ctrl *gomock.Controller) *MockSinkRepository {
	mock := &MockSinkRepository{ctrl: ctrl}
	mock.recorder = &MockSinkRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSinkRepository) EXPECT() *MockSinkRepositoryMockRecorder {
	return m.recorder
}

// ComponentBySinks mocks base method
func (m *MockSinkRepository) ComponentBySinks(ctx context.Context, sinks []int) ([]*model.Component, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ComponentBySinks", ctx, sinks)
	ret0, _ := ret[0].([]*model.Component)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ComponentBySinks indicates an expected call of ComponentBySinks
func (mr *MockSinkRepositoryMockRecorder) ComponentBySinks(ctx, sinks interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ComponentBySinks", reflect.TypeOf((*MockSinkRepository)(nil).ComponentBySinks), ctx, sinks)
}

// PodsBySinks mocks base method
func (m *MockSinkRepository) PodsBySinks(ctx context.Context, sinks []int) ([][]*model.Pod, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PodsBySinks", ctx, sinks)
	ret0, _ := ret[0].([][]*model.Pod)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PodsBySinks indicates an expected call of PodsBySinks
func (mr *MockSinkRepositoryMockRecorder) PodsBySinks(ctx, sinks interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PodsBySinks", reflect.TypeOf((*MockSinkRepository)(nil).PodsBySinks), ctx, sinks)
}

// TopicBySinks mocks base method
func (m *MockSinkRepository) TopicBySinks(ctx context.Context, sinks []int) ([]*model.Topic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TopicBySinks", ctx, sinks)
	ret0, _ := ret[0].([]*model.Topic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TopicBySinks indicates an expected call of TopicBySinks
func (mr *MockSinkRepositoryMockRecorder) TopicBySinks(ctx, sinks interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TopicBySinks", reflect.TypeOf((*MockSinkRepository)(nil).TopicBySinks), ctx, sinks)
}
